{"ast":null,"code":"var _jsxFileName = \"/home/zx/Desktop/musical-spork-robofriends/src/containers/App.js\";\nimport React from 'react';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from \"../actions\";\nimport { connect } from 'react-redux'; //props never change\n//state is the description of th program, it is an object. It is able to change.\n\nconst mapStateToProps = state => {\n  var _temp;\n\n  return _temp = class App extends React.Component {\n    constructor() {\n      super();\n\n      this.onSearchChange = event => {\n        this.setState({\n          searchfield: event.target.value\n        });\n      };\n\n      this.state = {\n        robots: [],\n        searchfield: ''\n      };\n    }\n\n    componentDidMount() {\n      console.log(this.props.store.getState());\n      fetch('https://jsonplaceholder.typicode.com/users').then(Response => {\n        return Response.json();\n      }).then(users => this.setState({\n        robots: users\n      }));\n    }\n\n    render() {\n      const filterRobots = this.state.robots.filter(robots => {\n        return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n      });\n\n      if (this.state.robots.length === 0) {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }, \"Loading\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tc\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"f1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }, \"RoboFriends\"), /*#__PURE__*/React.createElement(Searchbox, {\n          searchChange: this.onSearchChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Scroll, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Cardlist, {\n          robots: filterRobots,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        })));\n      }\n    }\n\n  }, _temp;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/zx/Desktop/musical-spork-robofriends/src/containers/App.js"],"names":["React","Cardlist","Searchbox","Scroll","setSearchField","connect","mapStateToProps","state","App","Component","constructor","onSearchChange","event","setState","searchfield","target","value","robots","componentDidMount","console","log","props","store","getState","fetch","then","Response","json","users","render","filterRobots","filter","name","toLowerCase","includes","length","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AAEA,MAAMC,eAAe,GAAGC,KAAK;AAAA;;AAAA,iBAC7B,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAC9BC,IAAAA,WAAW,GAAG;AACZ;;AADY,WAedC,cAfc,GAeIC,KAAD,IAAW;AACxB,aAAKC,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,SAAd;AACH,OAjBa;;AAEZ,WAAKT,KAAL,GAAa;AACXU,QAAAA,MAAM,EAAE,EADG;AAEXH,QAAAA,WAAW,EAAE;AAFF,OAAb;AAID;;AACDI,IAAAA,iBAAiB,GAAE;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,QAAjB,EAAZ;AACAC,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACAC,IADA,CACKC,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,OAHD,EAICF,IAJD,CAIMG,KAAK,IAAG,KAAKf,QAAL,CAAc;AAACI,QAAAA,MAAM,EAAEW;AAAT,OAAd,CAJd;AAKH;;AAIDC,IAAAA,MAAM,GAAE;AACJ,YAAMC,YAAY,GAAG,KAAKvB,KAAL,CAAWU,MAAX,CAAkBc,MAAlB,CAAyBd,MAAM,IAAG;AACnD,eAAOA,MAAM,CAACe,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAK3B,KAAL,CAAWO,WAAX,CAAuBmB,WAAvB,EAAnC,CAAP;AACH,OAFoB,CAArB;;AAGH,UAAI,KAAK1B,KAAL,CAAWU,MAAX,CAAkBkB,MAAlB,KAA4B,CAAhC,EAAkC;AAC9B,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH,OAFD,MAGI;AACL,4BACQ;AAAK,UAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKxB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAEmB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CAHI,CADR;AASC;AACA;;AArC6B,GADL;AAAA,CAA7B;;AAwCA,eAAezB,OAAO,CAACC,eAAD,EAAkB8B,kBAAlB,CAAP,CAA6C5B,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from \"../actions\";\nimport { connect } from 'react-redux';\n//props never change\n//state is the description of th program, it is an object. It is able to change.\n  \nconst mapStateToProps = state =>\nclass App extends React.Component {\n    constructor() {\n      super()\n      this.state = {\n        robots: [],\n        searchfield: ''\n      }  \n    }\n    componentDidMount(){\n        console.log(this.props.store.getState())\n        fetch('https://jsonplaceholder.typicode.com/users').\n        then(Response => {\n         return Response.json();\n        })\n        .then(users =>this.setState({robots: users}));\n    }\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }   \n    render(){\n        const filterRobots = this.state.robots.filter(robots =>{\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n     if (this.state.robots.length ===0){\n         return <h1>Loading</h1>\n     }\n     else{\n    return(\n            <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <Searchbox searchChange={this.onSearchChange} />\n        <Scroll>\n        <Cardlist robots={filterRobots}/>\n        </Scroll>\n        </div>\n        );\n    }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}