{"ast":null,"code":"var _jsxFileName = \"/home/zx/Desktop/musical-spork-robofriends/src/containers/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from \"../actions\"; //props never change\n//state is the description of th program, it is an object. It is able to change.\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.store.getState());\n    fetch('https://jsonplaceholder.typicode.com/users').then(Response => {\n      return Response.json();\n    }).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filterRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"Loading\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, \"RoboFriends\"), /*#__PURE__*/React.createElement(Searchbox, {\n        searchChange: onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Cardlist, {\n        robots: filterRobots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      })));\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/zx/Desktop/musical-spork-robofriends/src/containers/App.js"],"names":["React","connect","Cardlist","Searchbox","Scroll","setSearchField","mapStateToProps","state","searchField","searchRobots","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","Component","constructor","robots","componentDidMount","console","log","props","store","getState","fetch","then","Response","json","users","setState","render","filterRobots","filter","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,YAA/B,C,CACA;AACA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD;AAD7B,GAAP;AAGH,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAa;AACpC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACN,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AADhC,GAAP;AAGH,CAJD;;AAKA,MAAMC,GAAN,SAAkBhB,KAAK,CAACiB,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKX,KAAL,GAAa;AACXY,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,QAAjB,EAAZ;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AACjB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHD,EAICF,IAJD,CAIMG,KAAK,IAAG,KAAKC,QAAL,CAAc;AAACZ,MAAAA,MAAM,EAAEW;AAAT,KAAd,CAJd;AAKH;;AACDE,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACb,MAAAA;AAAD,QAAW,KAAKZ,KAAtB;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcI,MAAAA;AAAd,QAAgC,KAAKW,KAA3C;AACA,UAAMU,YAAY,GAAG,KAAK1B,KAAL,CAAWY,MAAX,CAAkBe,MAAlB,CAAyBf,MAAM,IAAG;AACnD,aAAOA,MAAM,CAACgB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAK9B,KAAL,CAAWC,WAAX,CAAuB4B,WAAvB,EAAnC,CAAP;AACH,KAFoB,CAArB;;AAGH,QAAI,KAAK7B,KAAL,CAAWY,MAAX,CAAkBmB,MAAlB,KAA4B,CAAhC,EAAkC;AAC9B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH,KAFD,MAGI;AACL,0BACQ;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE1B,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,eAGJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEqB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAHI,CADR;AASC;AACA;;AAnC6B;;AAqClC,eAAehC,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from \"../actions\";\n//props never change\n//state is the description of th program, it is an object. It is able to change.\n  \nconst mapStateToProps = state =>{\n    return {\n        searchField: state.searchRobots.searchField\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n}\n}\nclass App extends React.Component {\n    constructor() {\n      super()\n      this.state = {\n        robots: []\n      }  \n    }\n    componentDidMount(){\n        console.log(this.props.store.getState())\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(Response => {\n         return Response.json();\n        })\n        .then(users =>this.setState({robots: users}));\n    }  \n    render(){\n        const {robots} = this.state;\n        const {searchField, onSearchChange} = this.props;\n        const filterRobots = this.state.robots.filter(robots =>{\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n        })\n     if (this.state.robots.length ===0){\n         return <h1>Loading</h1>\n     }\n     else{\n    return(\n            <div className='tc'>\n            <h1 className='f1'>RoboFriends</h1>\n            <Searchbox searchChange={onSearchChange} />\n        <Scroll>\n        <Cardlist robots={filterRobots}/>\n        </Scroll>\n        </div>\n        );\n    }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}